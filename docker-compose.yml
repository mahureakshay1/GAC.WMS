services:
  server:
    build:
      context: .
      target: final
    ports:
      - "8080:8080"
    restart: on-failure:2
    volumes:
      - /run/desktop/mnt/host/c/SharedFolder:/app/shared
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;Database=GacWms;User Id=sa;Password=Akshay@123!;TrustServerCertificate=True;
    networks:
      - backend-network
  
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Akshay@123!
      - MSSQL_PID=Developer
    networks:
      - backend-network
    volumes:
      - db-data:/var/opt/mssql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost,1433", "-U", "sa", "-P", "Akshay@123!", "-Q", "SELECT 1", "-C"]
      interval: 30s
      retries: 5
      timeout: 10s
    entrypoint: >
      /bin/bash -c "
        echo 'Waiting for SQL Server to start...';
        /opt/mssql/bin/sqlservr &

        until /opt/mssql-tools18/bin/sqlcmd -S localhost,1433 -U sa -P 'Akshay@123!' -C -Q 'SELECT 1'; do
          echo 'SQL Server is not ready, retrying...';
          sleep 30s;
        done

        echo 'SQL Server is ready, checking if GacWms database online...';

        until /opt/mssql-tools18/bin/sqlcmd -S localhost,1433 -U sa -P 'Akshay@123!' -d 'GacWms' -Q 'SELECT 1' -C; do
          echo 'Database GacWms not found, waiting...';
          sleep 60s;
        done

        echo 'Database GacWms exists, running init.sql...';
        /opt/mssql-tools18/bin/sqlcmd -S localhost,1433 -U sa -P 'Akshay@123!' -C -i /docker-entrypoint-initdb.d/init.sql;

        wait $! "
      
volumes:
  db-data:

networks:
  backend-network:
    driver: bridge